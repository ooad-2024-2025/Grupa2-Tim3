@model IEnumerable<BookMyStyle.Models.Recenzija>


@{
    ViewData["Title"] = "Recenzije";
}
@section Styles {
    <link rel="stylesheet" href="~/css/obavijest.css" />
    <style>
        .star-filter {
            color: #ccc;
            margin-right: 5px;
            font-size: 1.5rem;
            cursor: pointer;
        }

            .star-filter.active {
                color: gold;
            }
    </style>
}


<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2 m-0">Recenzije</h1>
    <div class="d-flex align-items-center gap-2">
        <button class="btn btn-outline-light"
                onclick="document.getElementById('filter-section').classList.toggle('d-none')">
            Filteri
        </button>

        @if (User.IsInRole("Administrator") || User.IsInRole("Korisnik"))
        {
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-lg"></i> Napiši recenziju
            </a>
        }
    </div>


</div>

<div id="filter-section" class="d-none mb-4 text-white">
    <p class="mb-2">Filtriraj po ocjeni:</p>
    <div id="star-filter" class="mb-3">
        @for (int i = 1; i <= 5; i++)
        {
            <span class="star-filter" data-value="@i">★</span>
        }
    </div>
    <p class="mb-2">Sortiraj po ocjeni:</p>
    <select id="sortOrder" class="form-select form-select-sm w-auto mb-3" onchange="applyFilterAndSort()">
        <option value="desc">Viša ka nižoj</option>
        <option value="asc">Niža ka višoj</option>
    </select>
    <button class="btn btn-outline-light btn-sm" onclick="resetFilter()">Poništi filter</button>
</div>


<div class="container obavijesti-container">
@foreach (var item in Model)
{
        <div class="card recenzija-card" data-ocjena="@item.Ocjena">

            <div class="card-body d-flex flex-column">

                <h6>
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= item.Ocjena)
                        {
                            <span style="color: gold; font-size: 1.1rem;">★</span>  <!-- Puna zvjezdica -->
                        }
                        else
                        {
                            <span style="color: #444; font-size: 1.1rem;">★</span>  <!--Prazna tamna -->
                        }
                    }
                </h6>
                <p class="text-muted">Korisnik: @item.Korisnik?.UserName</p>
                <p class="text-muted">Salon: @item.Salon?.Naziv</p>


                <p class="text-muted">@item.Komentar</p>

                <p class="text-muted">@item.DatumObjave.ToString("dd.MM.yyyy HH:mm")</p>

                
                   
              

                <div class="mt-auto d-flex flex-wrap">
                 
                        @if (User.IsInRole("Administrator") || User.IsInRole("Korisnik"))
                        {
                        <a class="btn btn-outline-secondary btn-sm me-2 mb-2"
                           asp-action="Edit" asp-route-id="@item.recenzijaID">
                            Uredi
                        </a>
                        <a class="btn btn-outline-danger btn-sm me-2 mb-2"
                           asp-action="Delete" asp-route-id="@item.recenzijaID">
                            Obriši
                        </a>
                        }
                    
                        @if (User.IsInRole("Administrator") || User.IsInRole("Korisnik") || User.IsInRole("Frizer"))
                           {
                        <a class="btn btn-outline-info btn-sm mb-2"
                           asp-action="Details" asp-route-id="@item.recenzijaID">
                            Detalji
                        </a>
                        }
                   
                </div>
            </div>
        </div>
}
@section Scripts {
        <script>
            let selectedRating = null;

            document.querySelectorAll(".star-filter").forEach(star => {
                star.addEventListener("click", function () {
                    selectedRating = parseInt(this.dataset.value);

                    document.querySelectorAll(".star-filter").forEach(s => s.classList.remove("active"));
                    this.classList.add("active");

                    applyFilterAndSort();
                });
            });

            function applyFilterAndSort() {
                const cards = Array.from(document.querySelectorAll(".recenzija-card"));
                const sortOrder = document.getElementById("sortOrder").value;

                let filtered = cards;

                if (selectedRating !== null) {
                    filtered = cards.filter(card =>
                        parseInt(card.getAttribute("data-ocjena")) === selectedRating
                    );
                }

                filtered.sort((a, b) => {
                    const aOcjena = parseInt(a.getAttribute("data-ocjena"));
                    const bOcjena = parseInt(b.getAttribute("data-ocjena"));
                    return sortOrder === "asc" ? aOcjena - bOcjena : bOcjena - aOcjena;
                });

                const container = document.querySelector(".obavijesti-container");
                container.innerHTML = "";
                filtered.forEach(card => container.appendChild(card));
            }

            function resetFilter() {
                selectedRating = null;

                document.querySelectorAll(".star-filter").forEach(s => s.classList.remove("active"));
                document.getElementById("sortOrder").value = "desc";

                const cards = Array.from(document.querySelectorAll(".recenzija-card")).sort((a, b) =>
                    parseInt(b.getAttribute("data-ocjena")) - parseInt(a.getAttribute("data-ocjena"))
                );

                const container = document.querySelector(".obavijesti-container");
                container.innerHTML = "";
                cards.forEach(card => container.appendChild(card));
            }
        </script>
}
